AWSTemplateFormatVersion: 2010-09-09
Description: Barracuda CloudGen Firewall - HA Cluster with EIP shifting
Parameters:
  ApplicationID:
    Type: String
    Default: sss001
    MinLength: 3
    MaxLength: 30
    AllowedPattern: "^[a-z0-9]*"
    Description: Enter Application ID
  SpokeApplicationID:
    Type: String
    Default: app001
    MinLength: 3
    MaxLength: 30
    AllowedPattern: "^[a-z0-9]*"
    Description: Enter Application ID
  Region:
    Type: String
    Default: eu-central-1
    Description: Region in which VPC will be launched
    AllowedValues:
      - eu-central-1
      - eu-west-1
  Environment:
    Type: String
    Default: CF-Sandbox
    MinLength: 1
    MaxLength: 20
    Description: >-
      Enter The Environment
    AllowedValues:
        - CF-Sandbox
        - Sandbox
        - Dev
        - Test
        - Acceptance
        - Production
  EnvironmentNumber:
    Type: Number
    Default: 100
    Description: >-
       001-099 Production,101-199 Acceptance,201-299 Test,301-399 Dev,401-499 Sandbox,501-599 CF-Sandbox,601-699 SharedSvcs
    MinValue: "001"
    MaxValue: "599"
  Zone:
    Type: String
    Default: pe
    MinLength: 2
    MaxLength: 2
    Description: >-
      Enter Environment (Input Format - pe=PublicEdge, mm=Management)
    AllowedValues:
      - pe
      - mm
  InstanceType:
    Description: Select the EC2 instance type
    Type: String
    Default: m4.large
    AllowedValues:
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
  LicenceMode:
    Description: Select the license type.
    Type: String
    Default: Hourly
    AllowedValues:
      - Hourly
      - BYOL
      - MeteredBilling
  ReleaseVersion:
    Description: Which release do you want to deploy?
    Type: String
    Default: 7.2.0
    AllowedValues:
      - 7.1.1
      - 7.2.0
      - 7.1.0
      - 7.0.3
      - 6.2.3
  IAMProfile:
    Description: >-
      Select the IAM Role for the Firewall. Check Barracuda Campus
      (https://campus.barracuda.com/doc/73719778/) for more details
    Type: String
    Default: enc-NGF-Role
  Owner:
    Type: String
    Default: randometest
    MinLength: 3
    MaxLength: 30
    AllowedPattern: "^[a-z0-9]*"
    Description: Enter Owner Name or Email id 
  CSP: 
    Type: String
    Default: aws
    MinLength: 2
    MaxLength: 3
    AllowedPattern: "^[a-z]*"
    AllowedValues:
     - aws
    Description: >-
      Select Cloud Service Provider     
  AMIBackup:
    Type: String
    Default: true
    MinLength: 2
    MaxLength: 5
    AllowedPattern: "^[a-z]*"
    AllowedValues:
       - yes
       - no
    Description: >-
      Choose true if you want to create AMI Backup of the resource else enter false
  DetailedMonitoring:
    Type: String
    Default: true
    MinLength: 2
    MaxLength: 5
    AllowedPattern: "^[a-z]*"
    AllowedValues:
      - yes
      - no
    Description: >-
      Choose true if you want to enable Detailed Monitoring of the resource else enter false
  VulnerabilityScan:
    Type: String
    Default: true
    MinLength: 2
    MaxLength: 5
    AllowedPattern: "^[a-z]*"
    AllowedValues:
      - yes
      - no
    Description: >-
      Choose true if you want to enable Vulnerability Scan of the resource else enter false
  AutoStartStop:
    Type: String
    Default: manual
    MinLength: 2
    MaxLength: 20
    Description: >-
      Choose The Type of AutoStartStop Behaviour      
  RetentionDaysAMI:
    Description: Takes the valid Retention Days from the rspective name of the parameter store.
    Type: 'AWS::SSM::Parameter::Value<String>'
  RetentionDaysLG:
    Description: Takes the valid Retention Days from the rspective name of the parameter store.
    Type: 'AWS::SSM::Parameter::Value<String>'     
  CGF1MIP:
    Type: String
    Default: 10.80.0.22
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})'
  CGF2MIP:
    Type: String
    Default: 10.80.4.22
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})'
  CGFImageId:
    Description: Takes the valid ami from the respective name of the parameter store.
    Type: 'AWS::SSM::Parameter::Value<String>'
  KeyName:
    Description: Takes the valid Key Pair from the respective name of the parameter store.
    Type: 'AWS::SSM::Parameter::Value<String>'
  NGFASN:
    Type: Number
    Default: '65000'
    Description: Enter the BGP ASN for the transit VPC firewalls
Resources:
#  routeTablePrivate:
#    Type: 'AWS::EC2::RouteTable'
#    Properties:
#      VpcId:
#        Fn::ImportValue: !Join
#          - '-'
#          - - !Ref Environment
#            - !Ref "AWS::Region"
#            - 'vpc-id'
#      Tags:
#        - Key: Name
#          Value: !Join 
#            - '-'
#            - - !Ref Environment
#              - !Ref EnvironmentNumber
#              - !Ref "AWS::Region"
#              - !Ref Zone
#              - 'routetable'
#        - Key: Environment
#          Value: !Ref Environment
#        - Key: AppID
#          Value: !Ref ApplicationID
  PERoute:
    Type: 'AWS::EC2::Route'
    DependsOn: instanceCGF1
    Properties:
      RouteTableId:
        Fn::ImportValue: !Join [ "-" , [ !Ref Environment , !Ref "AWS::Region" , 'pe' ,'routetable-id' ] ]
      DestinationCidrBlock: 
        Fn::ImportValue: !Join [ "-" , [ !Ref SpokeApplicationID , !Ref Environment , !Ref "AWS::Region" ,'vpc-cidr' ] ]
      InstanceId: !Ref instanceCGF1
  MMRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: instanceCGF1
    Properties:
      RouteTableId:
        Fn::ImportValue: !Join [ "-" , [ !Ref Environment , !Ref "AWS::Region" , 'mm' ,'routetable-id' ] ]
      DestinationCidrBlock: '0.0.0.0/0'
      InstanceId: !Ref instanceCGF1
  securityGroupCGF:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow All Traffic.
      VpcId:
        Fn::ImportValue: !Join
          - '-'
          - - !Ref Environment
            - !Ref "AWS::Region"
            - 'vpc-id'
      SecurityGroupIngress:
        - IpProtocol: '-1'
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref ApplicationID
              - !Ref Environment
              - !Ref EnvironmentNumber
              - !Ref Zone
              - 'nva-sg'
        - Key: Environment
          Value: !Ref Environment
        - Key: AppID
          Value: !Ref ApplicationID              
  floatingEIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  floatingEIPAssoc:
    Type: 'AWS::EC2::EIPAssociation'
    Properties:
      AllocationId: !GetAtt 
        - floatingEIP
        - AllocationId
      InstanceId: !Ref instanceCGF1
  IamInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties: 
      Path: "/"
      Roles: 
         - !Ref IAMProfile
  instanceCGF1:
    Type: 'AWS::EC2::Instance'
    Properties:
      DisableApiTermination: 'false'
      InstanceInitiatedShutdownBehavior: stop
      IamInstanceProfile: !Ref IamInstanceProfile
      ImageId: !Ref CGFImageId
      InstanceType: !Ref InstanceType
      Monitoring: 'false'
      SourceDestCheck: 'false'
      NetworkInterfaces:
        - DeleteOnTermination: 'true'
          Description: !Join 
            - ''
            - - 'NIC CGF1 '
              - !Ref ApplicationID
          DeviceIndex: 0
          SubnetId:
            Fn::ImportValue: !Join
              - '-'
              - - !Ref Environment
                - !Ref "AWS::Region"
                - !Ref Zone
                - 'subnet-id-az1'
          PrivateIpAddresses:
            - PrivateIpAddress: !Ref CGF1MIP
              Primary: 'true'
          GroupSet:
            - !Ref securityGroupCGF
          AssociatePublicIpAddress: 'true'
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref ApplicationID
              - !Ref Environment
              - !Ref EnvironmentNumber
              - !Ref Zone
              - 'linux-NVA'
              - '001'
              - 'ec2'
        - Key: Owner
          Value: !Ref Owner
        - Key: CSP
          Value: !Ref CSP
        - Key: Environment
          Value: !Ref Environment          
        - Key: VulnerabilityScan
          Value: !Ref VulnerabilityScan
        - Key: DetailedMonitoring
          Value: !Ref DetailedMonitoring
        - Key: AMIBackup
          Value: !Ref AMIBackup
        - Key: RetentionDays
          Value: !Ref RetentionDaysAMI
        - Key: RetentionDays
          Value: !Ref RetentionDaysLG
        - Key: AutoStartStop
          Value: !Ref AutoStartStop
      UserData: !Base64 
        'Fn::Join':
          - |+

          - - '#!/bin/bash'
            - !Join 
              - ' '
              - - /opt/phion/bin/cloud-setmip
                - !Ref CGF1MIP
                - '24'
                - !Join 
                  - .
                  - - !Select 
                      - 0
                      - !Split 
                        - .
                        - !Ref CGF1MIP
                    - !Select 
                      - 1
                      - !Split 
                        - .
                        - !Ref CGF1MIP
                    - !Select 
                      - 2
                      - !Split 
                        - .
                        - !Ref CGF1MIP
                    - '1'
            - !Join 
              - ' '
              - - echo
                - !Ref instanceCGF2
                - '|/opt/phion/bin/create-dha -s S1 -c -o'
                - !Ref CGF2MIP
                - '-n'
                - '24'
                - '-g'
                - !Join 
                  - .
                  - - !Select 
                      - 0
                      - !Split 
                        - .
                        - !Ref CGF2MIP
                    - !Select 
                      - 1
                      - !Split 
                        - .
                        - !Ref CGF2MIP
                    - !Select 
                      - 2
                      - !Split 
                        - .
                        - !Ref CGF2MIP
                    - '1'
            - cat << EOF >> /opt/phion/hooks/ha/aws-shift-eip.sh
            - . /etc/phion/bin/cloud-logapi.sh
            - init_log box_Cloud_control aws-eip-shift
            - ilog "hook script called with \$1"
            - EOF
            - >-
              echo "[[ \"_\$1\" == \"_HA-START\" ]] && {" >>
              /opt/phion/hooks/ha/aws-shift-eip.sh
            - !Join 
              - ' '
              - - echo "/opt/aws/bin/aws ec2 associate-address
                - >-
                  --instance-id $(/usr/bin/curl -s
                  http://169.254.169.254/latest/meta-data/instance-id)
                - '--allocation-id '
                - !GetAtt 
                  - floatingEIP
                  - AllocationId
                - '--allow-reassociation"'
                - '>> /opt/phion/hooks/ha/aws-shift-eip.sh'
            - >-
              echo "ilog \"EIP shifting to primary initiated: \${aws_handle}\""
              >> /opt/phion/hooks/ha/aws-shift-eip.sh
            - 'echo "}" >> /opt/phion/hooks/ha/aws-shift-eip.sh'
            - chmod +x /opt/phion/hooks/ha/aws-shift-eip.sh
            - cat << EOF >> /opt/phion/bin/xcloud-aws-check-eip-assoc.sh
            - >-
              if [[ \$(head -1 /opt/phion/run/server.ctrl | cut -d " " -f 3) =~
              ^(primary|secondary)\$ ]]; then
            - >-
              MY_ID=\`/usr/bin/curl -s
              http://169.254.169.254/latest/meta-data/instance-id\`
            - "MY_IP=\\`/opt/aws/bin/aws ec2 describe-instances --instance-id \\$MY_ID --output text | grep ASSOC | head -1 | cut -d \\$'\t' -f 4\\`"
            - >-
              CLUSTER_CNT=\`phionctrl server show | grep Boxes | xargs | tr " "
              "\n" | grep -v Boxes | wc -l\`
            - 'if [ "_\$1" != "_\$MY_IP" ] && [ \$CLUSTER_CNT == "2" ]; then'
            - /opt/phion/hooks/ha/aws-shift-eip.sh HA-START
            - fi
            - fi
            - EOF
            - chmod +x /opt/phion/bin/xcloud-aws-check-eip-assoc.sh
            - !Join 
              - ' '
              - - >-
                  echo "* * * * * root
                  /opt/phion/bin/xcloud-aws-check-eip-assoc.sh
                - !Ref floatingEIP
                - '" > /etc/cron.d/aws-check-eip-assoc'
  instanceCGF2:
    Type: 'AWS::EC2::Instance'
    Properties:
      DisableApiTermination: 'false'
      InstanceInitiatedShutdownBehavior: stop
      IamInstanceProfile: !Ref IamInstanceProfile
      ImageId: !Ref CGFImageId
      InstanceType: !Ref InstanceType
      Monitoring: 'false'
      SourceDestCheck: 'false'
      NetworkInterfaces:
        - DeleteOnTermination: 'true'
          Description: !Join 
            - ''
            - - 'NIC CGF2 '
              - !Ref ApplicationID
          DeviceIndex: 0
          SubnetId:
            Fn::ImportValue: !Join 
               - '-'
               - - !Ref Environment 
                 - !Ref "AWS::Region"
                 - !Ref Zone
                 - 'subnet-id-az2'
          PrivateIpAddresses:
            - PrivateIpAddress: !Ref CGF2MIP
              Primary: 'true'
          GroupSet:
            - !Ref securityGroupCGF
          AssociatePublicIpAddress: 'true'
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref ApplicationID
              - !Ref Environment
              - !Ref EnvironmentNumber
              - !Ref Zone
              - 'linux-NVA'
              - '002'
              - 'ec2'
        - Key: Owner
          Value: !Ref Owner
        - Key: CSP
          Value: !Ref CSP
        - Key: Environment
          Value: !Ref Environment          
        - Key: VulnerabilityScan
          Value: !Ref VulnerabilityScan
        - Key: DetailedMonitoring
          Value: !Ref DetailedMonitoring
        - Key: AMIBackup
          Value: !Ref AMIBackup
        - Key: RetentionDays
          Value: !Ref RetentionDaysAMI
        - Key: RetentionDays
          Value: !Ref RetentionDaysLG
        - Key: AutoStartStop
          Value: !Ref AutoStartStop
      UserData: !Base64 
        'Fn::Join':
          - |+

          - - '#!/bin/bash'
            - >-
              /opt/phion/bin/editconf -f /opt/phion/config/active/boxadm.conf -p
              RPASSWDENFORCE -v 0
            - >-
              /opt/phion/bin/editconf -f
              /opt/phion/config/configroot/boxadm.conf -p RPASSWDENFORCE -v 0
            - cat << EOF >> /opt/phion/hooks/ha/aws-shift-eip.sh
            - . /etc/phion/bin/cloud-logapi.sh
            - init_log box_Cloud_control aws-eip-shift
            - ilog "hook script called with \$1"
            - EOF
            - >-
              echo "[[ \"_\$1\" == \"_HA-START\" ]] && {" >>
              /opt/phion/hooks/ha/aws-shift-eip.sh
            - !Join 
              - ' '
              - - echo "/opt/aws/bin/aws ec2 associate-address
                - >-
                  --instance-id $(/usr/bin/curl -s
                  http://169.254.169.254/latest/meta-data/instance-id)
                - '--allocation-id '
                - !GetAtt 
                  - floatingEIP
                  - AllocationId
                - '--allow-reassociation"'
                - '>> /opt/phion/hooks/ha/aws-shift-eip.sh'
            - >-
              echo "ilog \"EIP shifting to secondary initiated:
              \${aws_handle}\"" >> /opt/phion/hooks/ha/aws-shift-eip.sh
            - 'echo "}" >> /opt/phion/hooks/ha/aws-shift-eip.sh'
            - chmod +x /opt/phion/hooks/ha/aws-shift-eip.sh
            - cat << EOF >> /opt/phion/bin/xcloud-aws-check-eip-assoc.sh
            - >-
              if [[ \$(head -1 /opt/phion/run/server.ctrl | cut -d " " -f 3) =~
              ^(primary|secondary)\$ ]]; then
            - >-
              MY_ID=\`/usr/bin/curl -s
              http://169.254.169.254/latest/meta-data/instance-id\`
            - "MY_IP=\\`/opt/aws/bin/aws ec2 describe-instances --instance-id \\$MY_ID --output text | grep ASSOC | head -1 | cut -d \\$'\t' -f 4\\`"
            - >-
              CLUSTER_CNT=\`phionctrl server show | grep Boxes | xargs | tr " "
              "\n" | grep -v Boxes | wc -l\`
            - 'if [ "_\$1" != "_\$MY_IP" ] && [ \$CLUSTER_CNT == "2" ]; then'
            - /opt/phion/hooks/ha/aws-shift-eip.sh HA-START
            - fi
            - fi
            - EOF
            - chmod +x /opt/phion/bin/xcloud-aws-check-eip-assoc.sh
            - !Join 
              - ' '
              - - >-
                  echo "* * * * * root
                  /opt/phion/bin/xcloud-aws-check-eip-assoc.sh
                - !Ref floatingEIP
                - '" > /etc/cron.d/aws-check-eip-assoc'
Outputs:
  CGF1:
    Description: Public IP address of the active firewall
    Value: 
      Fn::GetAtt: [ instanceCGF1, PublicIp ]
    Export:
      Name: !Join
        - '-'
        - - !Ref Environment
          - !Ref "AWS::Region"
          - 'nva1'
  NVASGID:
    Value: !Ref securityGroupCGF
    Description: Barrcudda (NVA) VMs Security Group ID
    Export:
      Name: !Join
        - '-'
        - - !Ref Environment
          - !Ref "AWS::Region"
          - 'nva-sgid'              
  FloatingEIP:
    Description: Public IP address of the active firewall
    Value: !Ref floatingEIP
    Export:
      Name: !Join
        - '-'
        - - !Ref Environment
          - !Ref "AWS::Region"
          - 'nva-eip'   